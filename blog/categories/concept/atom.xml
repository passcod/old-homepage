<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: concept | ⚔ passcod ⚔]]></title>
  <link href="http://passcod.net/blog/categories/concept/atom.xml" rel="self"/>
  <link href="http://passcod.net/"/>
  <updated>2013-01-04T17:21:56+13:00</updated>
  <id>http://passcod.net/</id>
  <author>
    <name><![CDATA[Félix Saparelli]]></name>
    <email><![CDATA[me@passcod.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bullets dump for Imaku]]></title>
    <link href="http://passcod.net/2012/12/16/bullets-dump-for-imaku.html"/>
    <updated>2012-12-16T22:11:00+13:00</updated>
    <id>http://passcod.net/2012/12/16/bullets-dump-for-imaku</id>
    <content type="html"><![CDATA[<ul>
<li>White to be the dominant colour, not black as in every other thing out there.</li>
<li>Simple design, flat feel. Most others try to bring depth, but maybe trying too hard…</li>
<li>Icon grid is overrated. Text is nice too.</li>
<li>For non-phone devices (desktops / laptop / tablets / hybrids), the keyboard is accessible:

<ul>
<li>Alfred / Gnome3 -style type to search and launch</li>
<li>Maybe bring back Ubiquity principles?</li>
</ul>
</li>
<li>Modifiers for touch screens:

<ul>
<li>Hold one corner == Control / Alt / Super keys</li>
</ul>
</li>
<li>Use touchpads fully: gestures, etc – not just left/right click simulation</li>
<li>Forget the past:

<ul>
<li>DON'T BE BACKWARD COMPATIBLE !!!</li>
<li>Menu bar? Pfff.</li>
<li>Docks? No need.</li>
<li>Window decorations? Nope: can use modifier keys to manipulate windows (resize, move) and gestures / hotkeys to close them.</li>
</ul>
</li>
<li>But learn from it:

<ul>
<li>DON'T FORGET POWER USERS !!!</li>
<li>Ease of manipulating windows in bulk (tiling, layouts)</li>
<li>Settings, options, customisability.</li>
<li>In fact, educate users through "forced-learning" (like what is used in games, e.g. Meat Boy) so everyone's a power user.</li>
<li>Forget apps: applications are programs, we should make them simpler, not dumb.</li>
<li>PIPES !!! Pipes in Unix are the best thing ever, why couldn't we have something similar?</li>
</ul>
</li>
<li>Rich command line, like Firefox's Dev Tools and Ace's control line

<ul>
<li>Make it an integral part of the system, not just something for geeks</li>
</ul>
</li>
<li>Infinite desktop space:

<ul>
<li>No separate desktops / workspaces</li>
<li>The screen is a viewport onto the virtual desktop area.</li>
<li>Can save viewpoints to have quick-access</li>
<li>Base operation is 2D-only, but can lapse into the Z if user can handle the additional cognitive load ;)</li>
<li>Can do the usual, and pin windows to viewport</li>
<li>Super-advanced features:

<ul>
<li>Multiple screens have multiple viewports</li>
<li>Can connect different user spaces in one large canvas</li>
<li>A bit like multi-player tmux but for the desktop / GUI</li>
</ul>
</li>
</ul>
</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Undo-Version-Control]]></title>
    <link href="http://passcod.net/2012/03/12/undo-version-control.html"/>
    <updated>2012-03-12T00:00:00+13:00</updated>
    <id>http://passcod.net/2012/03/12/undo-version-control</id>
    <content type="html"><![CDATA[<p><em>Original on <a href="http://checkthis.com/l7p8">Checkthis.com</a></em></p>

<p><em>Edit (12507): As <a href="http://checkthis.com/user/makoyass">mako yass</a> pointed out, this already exists…
in vim. Oh, and there's also <a href="http://e-texteditor.com/blog/2006/making-undo-usable">an Emacs mode</a>
that copies that ability. The E editor for Windows <a href="http://e-texteditor.com/blog/2006/making-undo-usable">also has it</a>.
There's an open <a href="http://sublimetext.userecho.com/topic/92833-undo-trees/">feature request</a> for
Sublime Text, and I'm thinking of implementing it for <a href="http://codemirror.net/">CodeMirror</a>. At
the time I wrote this page, I didn't have the right terminology… this is called an <strong>undo tree</strong>.</em></p>

<hr />

<p>The littlest things tend to get very interesting if you look closely
enough. Take the world, for example: an altogether boring place to be,
for sure, but the little things that make it work are altogether fascinating. Ask Higgs.</p>

<p>I was happily cogitating when my mind came to wonder about the inner
workings of two very different but very similar things: Git and Undo.
If you don't know what I'm talking about, <a href="https://www.google.com/search?q=git">google “git”</a>
or <a href="https://en.wikipedia.org/wiki/Git_%28software%29">look on Wikipedia</a> or
<a href="http://www-cs-students.stanford.edu/%7Eblynn/gitmagic/">read this book</a>.
I assume everybody is familiar with the Undo button in <del>all</del> many applications.</p>

<p>Now, the way I see it, Undo works by pushing past actions onto a stack. Imagine you're
typing an #unblog entry in a very primitive text editor. You start a paragraph (0), type
'It' (1), decide against it, press Ctrl-Z twice (2), type 'The' (3), pause for a second,
press Ctrl-Z thrice (4), and type 'I was' (5) then go on writing. In a "classical" undo
mechanism, here's what happens:</p>

<!--more-->


<ol>
<li>'I', 't' get pushed to the stack</li>
<li>'t', 'I' get popped off</li>
<li>'T', 'h', 'e' get pushed on</li>
<li>'e', 'h', 'T' get popped off</li>
<li>'I', '_', 'w', 'a', 's' and the rest of your entry get pushed on</li>
</ol>


<p>This is cool, but it's awfully linear. What if you write a paragraph, Ctrl-Z it out,
write another one, then realise the first one was miles better? With this linear stack,
there's nothing you can do other than try to piece back things from your (poor) memory.</p>

<p>I think it would be cool to have git-style version control for your undo history. Actually,
it would be completely mind-blowing and friggin' wonder-inducing, but I'm trying to keep
myself controlled so I can type this up instead of jumping around gleefully.</p>

<p>With undo-version-control, the little scenario above would look like:</p>

<ol>
<li>'I', 't' get pushed to history</li>
<li>The current state (<em>HEAD</em> in git-speak) gets rolled back to 't', then 'I'</li>
<li>'T', 'h', 'e' get pushed to a new history branch</li>
<li><em>HEAD</em> is rolled back to 'e', 'h', 'T'</li>
<li>We are now on the original branch, and go downstream by one step (to 'I'),
then branch off and '_', 'w', 'a', 's' and the rest of it get pushed to that new branch.</li>
</ol>


<p>A bit more complex, for sure. To give you an idea, here's how it would look, tree wise:</p>

<p><img src="https://s3-eu-west-1.amazonaws.com/checkthis.com/asset/4f5f4550dd5de200010013aa/4f5f4550dd5de200010013aa-medium.png" alt="tree-like-structure" /></p>

<p>Now imagine you write a paragraph, Ctrl-Z it, write another worse one, and want to go back. Well: you can. And also...</p>

<ul>
<li>Realise that the second one was <em>actually</em> better, and go back again</li>
<li>Merge branches together</li>
<li>Tag particular points in the history</li>
<li><strong>Rebase</strong> the fuck out of it all</li>
<li>Melt your brains</li>
</ul>


<p>Way!</p>
]]></content>
  </entry>
  
</feed>
