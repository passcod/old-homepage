<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[⚔ passcod ⚔]]></title>
  <link href="http://passcod.net/atom.xml" rel="self"/>
  <link href="http://passcod.net/"/>
  <updated>2012-12-04T16:54:54+13:00</updated>
  <id>http://passcod.net/</id>
  <author>
    <name><![CDATA[Félix Saparelli]]></name>
    <email><![CDATA[me@passcod.net]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unlicensing Everything: Because MIT ain’t enough]]></title>
    <link href="http://passcod.net/2012/11/07/unlicensing-everything-because-mit-aint-enough.html"/>
    <updated>2012-11-07T21:00:00+13:00</updated>
    <id>http://passcod.net/2012/11/07/unlicensing-everything-because-mit-aint-enough</id>
    <content type="html"><![CDATA[<p>This is the license under which my code and content, here and everywhere else, is published
under by default:</p>

<blockquote><p>All text and code and bytes and images that I have and will author, baring any contrary notice on
or joined to the work in question, or a global notice published here on <strong>passcod.net</strong>
(which would apply to all future works &mdash; one cannot, after all, un-release something), is hereby
released in the Public Domain, or licensed under <a href="http://creativecommons.org/publicdomain/zero/1.0/">CC0</a>
or <a href="http://unlicense.org">the Unlicense</a>, whichever gives <strong>you</strong> the most rights.</p></blockquote>

<p>Now, <em>what does it mean</em>?</p>

<ul>
<li><p>Most of my significant work already has an attached notice, and thus is governed by that notice,
not by the blurb above.</p></li>
<li><p>Every new project/repo that doesn&#8217;t have a license notice is released in the Public Domain by default.</p></li>
<li><p>Most of my gists and code snippets out and about on the web are now released in the Public Domain.</p></li>
<li><p>All the content I have written, and will write, here (on this site/blog) is released in the Public Domain.</p></li>
<li><p>Whatever I have written to websites (e.g. Facebook, StackOverflow, Wikipedia, Twitter…) that have T&amp;Cs
which regulate the ownership and licensing of content is not affected by the above.</p></li>
<li><p>If I later say so, all <em>future</em> work can be licensed again (not released in the PD), but not <em>past</em>
work (that are released now and forever).</p></li>
<li><p>Octopress (on which this website runs) is MIT licensed (and remains so), but all code I have added to it
is Public Domain (i.e. if you run a diff between the master branch of this repo and the octopress
main repo, you should get only code I have authored, and thus code that is released. Although that&#8217;s not
an exact procedure. But you get the meaning).</p></li>
<li><p>When I contribute to open source projects, my code and content is governed by whatever license that
project uses.</p></li>
<li><p>When I write code for work (i.e. commercial), it is governed (and owned) by that company.
So: no worries, boss! :)</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Undo-Version-Control]]></title>
    <link href="http://passcod.net/2012/03/12/undo-version-control.html"/>
    <updated>2012-03-12T00:00:00+13:00</updated>
    <id>http://passcod.net/2012/03/12/undo-version-control</id>
    <content type="html"><![CDATA[<p><em>Original on <a href="http://checkthis.com/l7p8">Checkthis.com</a></em></p>

<p>The littlest things tend to get very interesting if you look closely
enough. Take the world, for example: an altogether boring place to be,
for sure, but the little things that make it work are altogether fascinating. Ask Higgs.</p>

<p>I was happily cogitating when my mind came to wonder about the inner
workings of two very different but very similar things: Git and Undo.
If you don&#8217;t know what I&#8217;m talking about, <a href="https://www.google.com/search?q=git">google “git”</a>
or <a href="https://en.wikipedia.org/wiki/Git_%28software%29">look on Wikipedia</a> or
<a href="http://www-cs-students.stanford.edu/%7Eblynn/gitmagic/">read this book</a>.
I assume everybody is familiar with the Undo button in <del>all</del> many applications.</p>

<p>Now, the way I see it, Undo works by pushing past actions onto a stack. Imagine you&#8217;re
typing an #unblog entry in a very primitive text editor. You start a paragraph (0), type
&#8216;It&#8217; (1), decide against it, press Ctrl-Z twice (2), type &#8216;The&#8217; (3), pause for a second,
press Ctrl-Z thrice (4), and type &#8216;I was&#8217; (5) then go on writing. In a &#8220;classical&#8221; undo
mechanism, here&#8217;s what happens:</p>

<ol>
<li>&#8216;I&#8217;, &#8216;t&#8217; get pushed to the stack</li>
<li>&#8216;t&#8217;, &#8216;I&#8217; get popped off</li>
<li>&#8216;T&#8217;, &#8216;h&#8217;, &#8216;e&#8217; get pushed on</li>
<li>&#8216;e&#8217;, &#8216;h&#8217;, &#8216;T&#8217; get popped off</li>
<li>&#8216;I&#8217;, &#8216;_&#8217;, &#8216;w&#8217;, &#8216;a&#8217;, &#8216;s&#8217; and the rest of your entry get pushed on</li>
</ol>


<p>This is cool, but it&#8217;s awfully linear. What if you write a paragraph, Ctrl-Z it out,
write another one, then realise the first one was miles better? With this linear stack,
there&#8217;s nothing you can do other than try to piece back things from your (poor) memory.</p>

<p>I think it would be cool to have git-style version control for your undo history. Actually,
it would be completely mind-blowing and friggin&#8217; wonder-inducing, but I&#8217;m trying to keep
myself controlled so I can type this up instead of jumping around gleefully.</p>

<p>With undo-version-control, the little scenario above would look like:</p>

<ol>
<li>&#8216;I&#8217;, &#8216;t&#8217; get pushed to history</li>
<li>The current state (<em>HEAD</em> in git-speak) gets rolled back to &#8216;t&#8217;, then &#8216;I&#8217;</li>
<li>&#8216;T&#8217;, &#8216;h&#8217;, &#8216;e&#8217; get pushed to a new history branch</li>
<li><em>HEAD</em> is rolled back to &#8216;e&#8217;, &#8216;h&#8217;, &#8216;T&#8217;</li>
<li>We are now on the original branch, and go downstream by one step (to &#8216;I&#8217;),
then branch off and &#8216;_&#8217;, &#8216;w&#8217;, &#8216;a&#8217;, &#8216;s&#8217; and the rest of it get pushed to that new branch.</li>
</ol>


<p>A bit more complex, for sure. To give you an idea, here&#8217;s how it would look, tree wise:</p>

<p><img src="https://s3-eu-west-1.amazonaws.com/checkthis.com/asset/4f5f4550dd5de200010013aa/4f5f4550dd5de200010013aa-medium.png" alt="tree-like-structure" /></p>

<p>Now imagine you write a paragraph, Ctrl-Z it, write another worse one, and want to go back. Well: you can. And also&#8230;</p>

<ul>
<li>Realise that the second one was <em>actually</em> better, and go back again</li>
<li>Merge branches together</li>
<li>Tag particular points in the history</li>
<li><strong>Rebase</strong> the fuck out of it all</li>
<li>Melt your brains</li>
</ul>


<p>Way!</p>
]]></content>
  </entry>
  
</feed>
